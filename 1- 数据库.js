/* 
    什么是数据库
    数据库是按照一定的数据结构，组织存放和使用数据的仓库

    为什么要使用数据库
    1、 数据安全的考虑
    2、 数据分享的不方便
    3、 便于存储
    总结：使用数据库便于存储，使用，分享数据，同时能够保证数据的相对安全

    关系型数据库和非关系型数据库
    关系型数据库：mysql oracle sqlserver
    非关系型数据库： redis mongodb

    关系型数据库的问题是数据结构一开始要设定好，而且数据海量的时候查询起来会很慢。而非关系数据库比较随意，查询起来比较快

    数据库的基础概念
    数据库 可以理解成一个文件夹 
    表  表里的每一行叫做记录，每一列叫做字段
    字段





*/

/* 

    字符集
    utf-UTF-8

    常用的字段有哪些
    数字类型：  
        整型：
             tinyint（0-255常用于年龄） 数据最大值127
             smallint（相对较长） 
             int（更长）
             bigint 
             （整型不需要规定长度）
        浮点型：  decimal 
        字符型：  char  通常用来存放值的长度是相对固定的，比如性别
                varchar  通常用来存放值的长度不是固定的 
                text 
    ``  日期时间类型： 
            date：日期类型
            datetime: 日期时间类型
    字符型的要规定长度
    char(6) 两个汉字，达不到的就用空格填充，一个汉字是3个字节。如果实际存储字符长度不够时候，mysql会自动填充空格
    varchar是存多少算多少。比如定义了12，但是只存了3，那么占用的内存就是3 
    电话号码11位，用char，
    既要满足当前的需求，还要考虑后来的拓展性，来选择字段类型
    浮点型用的不是很多。常常是先乘以100存成整型，然后需要用的时候再除以100.

    总结：选择字段类型时要根据实际存放值的类型来取舍，长度选择纪要满足当前存储的需要，还要兼顾将来的扩展性

*/

/* 
    常见的mysql表类型：innodb myisam
    1、myisam表的类型特点，强调速度，不支持事务，外键
    2、innodb表类型。强调稳定性，支持事务，外键

    // 事务：比如给你朋友转2000元，那么要执行两个关键的动作：你朋友账户加2000，你的账户减去2000，这两个关键的动作要么都成功，要么都失败。

    // 外键：一张表的某一列的值，是另外一张表的主键的值，那么前者的一列值叫做外键 （实际中用的很少）
        表中每一列的值是另外表中的主键的值，那么这一列称为外键，外键能保证数据的一致性和完整性，当然我们也可以通过应用程序保证数据一致性和完整性

    // 主键：能唯一代表表中某条记录的列称为主键。比如学号，班号
        目的是让一列可以自动增长
        主键一般都是整型，因为整型才有自动增长


*/